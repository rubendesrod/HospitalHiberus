version: "3.8"
services:

  #Zipkin
  zipkin:
    image: openzipkin/zipkin:2.24
    container_name: zipkin
    ports:
      - "9411:9411"

  # Zokeeper
  zookeeper:
    image: library/zookeeper:3.7.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  # Kafka
  kafka:
    image: confluentinc/cp-enterprise-kafka:6.1.1
    hostname: kafka
    container_name: kafka
    tmpfs: /kafka/kafka-logs
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_HEAP_OPTS: -Xmx3G -Xms1G
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_LOG_RETENTION_MS: -1
      KAFKA_MESSAGE_MAX_BYTES: 10485880
      KAFKA_NUM_PARTITIONS: 1
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka:9092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: "true"
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always

  # Inicialicacion de los topics de kafka mediante comando
  init-kafka:
    image: confluentinc/cp-enterprise-kafka:6.1.1
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:29092 --list
      
      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic historialMedico --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic facturas --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic facturasPagadas --replication-factor 1 --partitions 1
      
      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:29092 --list
      "

  # Schema Registry
  schema-registry:
    image: confluentinc/cp-schema-registry:6.1.1
    container_name: schema-registry
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
    depends_on:
      - kafka
    restart: always

  # Kowl (Interfaz Visual Kafka)
  kowl:
    image: quay.io/cloudhut/kowl:v1.4.0
    container_name: kowl
    restart: on-failure
    hostname: kowl
    volumes:
      - ./inits/kowl-config.yaml:/etc/kowl/config.yaml
    ports:
      - "8080:8080"
    environment:
      KAFKA_SCHEMAREGISTRY_ENABLED: "true"
      KAFKA_SCHEMAREGISTRY_URLS: http://localhost:8081
    entrypoint: ./kowl --config.filepath=/etc/kowl/config.yaml
    depends_on:
      - schema-registry
      - kafka


  # PostgreSQL para el microservicio de pacientes
  db_pacientes:
    image: postgres:latest
    container_name: db_pacientes
    environment:
      POSTGRES_USER: pacientes_user
      POSTGRES_PASSWORD: pacientes_password
      POSTGRES_DB: pacientes_db
    ports:
      - "5432:5432"
    volumes:
      - pacientes_data:/var/lib/postgresql/data
      - ./init-db/init-db-pacientes:/docker-entrypoint-initdb.d

  # PostgreSQL para el microservicio de citas
  db_citas:
    image: postgres:latest
    container_name: db_citas
    environment:
      POSTGRES_USER: citas_user
      POSTGRES_PASSWORD: citas_password
      POSTGRES_DB: citas_db
    ports:
      - "5433:5432" # Cambio del puerto para evitar conflictos
    volumes:
      - citas_data:/var/lib/postgresql/data
      - ./init-db/init-db-citas:/docker-entrypoint-initdb.d

  # MySQL para el microservicio de m√©dicos
  db_medicos:
    image: mysql:latest
    container_name: db_medicos
    environment:
      MYSQL_ROOT_PASSWORD: medicos_root_password
      MYSQL_DATABASE: medicos_db
      MYSQL_USER: medicos_user
      MYSQL_PASSWORD: medicos_password
    ports:
      - "3307:3306"
    volumes:
      - medicos_data:/var/lib/mysql
      - ./init-db/init-db-medicos:/docker-entrypoint-initdb.d

  # MongoDB para microservicio historialMedico
  db_historialMedico:
    image: mongo:6.0
    container_name: db_historialMedico
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: historialmedico_db
      MONGO_INITDB_ROOT_USERNAME: historialMedico_root
      MONGO_INITDB_ROOT_PASSWORD: historialMedico_rootpassword
    volumes:
      - historialMedico_data:/data/db
      - ./inits/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js

  # MySQL para el microservicio facturas
  db_facturas:
    image: mysql:latest
    container_name: db_facturas
    environment:
      MYSQL_ROOT_PASSWORD: facturas_root_password
      MYSQL_DATABASE: facturas_db
      MYSQL_USER: facturas_user
      MYSQL_PASSWORD: facturas_password
    ports:
      - "3308:3306"
    volumes:
      - facturas_data:/var/lib/mysql
      - ./init-db/init-db-facturas:/docker-entrypoint-initdb.d

  # Config server

  # Eureka server

  # Gateway server

  # Microservicio Medicos
  medicos-service:
    build:
      context: ./medicos
      dockerfile: Dockerfile
    container_name: medicos-service
    environment:
      DB_HOST: db_medicos
      DB_PORT: 3306
      DB_USER: medicos_user
      DB_PASSWORD: medicos_password
      DB_NAME: medicos_db
    ports:
      - "8082:8082"
    depends_on:
      - db_medicos


  # Microservicio Pacientes

  # Microservicio Citas

  # Microservicio facturas

  # Microservicio consultador-historialMedico

  # Microservicio consumer-historialMedico


# Volumenes para la persistencia de los datos en la DB
volumes:
  pacientes_data:
  citas_data:
  medicos_data:
  historialMedico_data:
  facturas_data: